//This object displays information about an Adventurer.
{
	id: "adventurer_display",

	is_strict: true,

	properties: {
		//The adventurer we're displaying info about.
		adventurer: { type: "class adventurer_state" },

		_width: 220,
		_height: 120,

		//this function draws the object. We should make sure it gets
		//called whenever the adventurer changes.
		render: "def() ->commands
		set(animation, lib.gui.render_frame(c, _width, _height,
		[
			//draw a solid rectangle in a dark gray color for the panel.
			c.set_source_rgba(0.2, 0.2, 0.2, 1),
			c.rectangle(0, 0, _width, _height),
			c.fill(),

			//draw a border around the rectangle in a slightly lighter
			//shade of gray.
			c.rectangle(0, 0, _width, _height),
			c.set_line_width(4),
			c.set_source_rgba(0.4, 0.4, 0.4, 1),
			c.stroke(),

			//now draw the character text status in white.
			c.translate(10, 10),

			c.set_source_rgba(1, 1, 1, 1),

			map(fragments,
			[
				c.save(),
				value.path,
				c.fill(),
				c.restore(),
			])

			where fragments =
			  //here controls the text that is displayed, we can
			  //add any new stats that should show up in here.
			  c.markup_text(
			    sprintf(q(<font size='14'>%s\n%s</font>),
			            adventurer.name,
			            adventurer.class
			    ),
			  {
				width: 200,
			  })
		]))
		where c = canvas()
		",
	},

	events: {
		create: "render()",
	},
}
