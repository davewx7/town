//this is the main object which controls the screen where you manage your
//town. When this object is created it is responsible for creating the
//town and all associated data and start the game.
{
	id: "town_controller",
	is_strict: true,
	hidden_in_game: true,

	properties: {
		state: { type: "class town_state", init: "construct('town_state')" },

		adventurer_avatars: { type: "[obj adventurer_avatar]", default: [] },

		//function to add a new adventurer, generated randomly.
		recruit_adventurer: "def() ->commands
		[
			add(state.adventurers, [new_adventurer]),

			//create an object to display this new adventurer.
			spawn('adventurer_avatar', {
				x: 50 + 1d600,
				y: 50 + 1d400,
				adventurer: new_adventurer,

				//restrict the adventurer to walk in this area.
				_walk_area: [50, 50, 600, 400],

				//make them stand still for 300 frames before they
				//start walking around.
				_next_walk_action: 300,

				//start it really bright and invisible...
				lum: 5.0,
				saturation: 0.0,
				alpha: 0,

			}, [
				add(adventurer_avatars, [child]),

				//...fade our new adventurer in over half a second.
				animate(child, {
					alpha: 255,
					lum: 1.0,
					saturation: 1.0,
				}, {
					duration: 30,
				})
			]),
		]

		where new_adventurer = lib.generator.generate_adventurer()
		",

		show_gui: "def() ->commands [
			//create a button that lets us recruit adventurers.
			spawn('button_controller', {
				x: 20,
				y: 540,
				text: 'Recruit Adventurer',
				button_width: 260,
				button_height: 30,
				on_click: me.recruit_adventurer,
			}, [
				set(_recruit_button, child),
			])
		]",

		_recruit_button: { type: "null|obj button_controller" },
	},

	events: {
		create: "show_gui()"
	},
}
